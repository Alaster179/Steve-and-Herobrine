<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Herobrine 3D</title>
    <link rel="stylesheet" href="style.css" />
</head>
<body>
    <h1>Herobrine 3D — Беги от него!</h1>
    <canvas id="gameCanvas"></canvas>

    <!-- Подключение Three.js -->
    <script src="https://cdn.jsdelivr.net/npm/three@0.157.0/build/three.min.js"></script> 
    <script src="game.js"></script>
</body>
</html>
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: #111;
    color: white;
    font-family: sans-serif;
    text-align: center;
}

canvas {
    display: block;
    width: 100vw;
    height: 100vh;
}
// === THREE.JS SETUP ===
const scene = new THREE.Scene();
scene.background = new THREE.Color(0x87CEEB); // Голубое небо

const camera = new THREE.PerspectiveCamera(
    75,
    window.innerWidth / window.innerHeight,
    0.1,
    1000
);

const renderer = new THREE.WebGLRenderer({ canvas: document.getElementById("gameCanvas") });
renderer.setSize(window.innerWidth, window.innerHeight);
window.addEventListener('resize', () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
});

// === БЛОКИ (земля) ===
const groundBlocks = [];
const blockMaterial = new THREE.MeshStandardMaterial({ color: 0x228B22 }); // Трава
for (let x = -10; x <= 10; x++) {
    for (let z = -10; z <= 10; z++) {
        const geometry = new THREE.BoxGeometry(1, 1, 1);
        const block = new THREE.Mesh(geometry, blockMaterial);
        block.position.set(x, 0, z);
        scene.add(block);
        groundBlocks.push(block);
    }
}

// === ИГРОК ===
const playerGeometry = new THREE.BoxGeometry(0.5, 1.5, 0.5);
const playerMaterial = new THREE.MeshStandardMaterial({ color: 0x0000FF });
const player = new THREE.Mesh(playerGeometry, playerMaterial);
player.position.set(0, 1, 0);
scene.add(player);

const speed = 0.1;

// === ХЕРОБРИН ===
const herobrineGeometry = new THREE.BoxGeometry(0.5, 1.5, 0.5);
const herobrineMaterial = new THREE.MeshStandardMaterial({ color: 0xFF0000 });
const herobrine = new THREE.Mesh(herobrineGeometry, herobrineMaterial);
herobrine.position.set(5, 1, 5);
scene.add(herobrine);

// === ОСВЕЩЕНИЕ ===
const light = new THREE.DirectionalLight(0xffffff, 1);
light.position.set(10, 20, 10);
scene.add(light);

// === УПРАВЛЕНИЕ ===
const keys = {};
document.addEventListener('keydown', e => keys[e.key.toLowerCase()] = true);
document.addEventListener('keyup', e => keys[e.key.toLowerCase()] = false);

function updatePlayer() {
    if (keys['w']) player.position.z -= speed;
    if (keys['s']) player.position.z += speed;
    if (keys['a']) player.position.x -= speed;
    if (keys['d']) player.position.x += speed;
}

function updateHerobrine() {
    const dx = player.position.x - herobrine.position.x;
    const dz = player.position.z - herobrine.position.z;
    const dist = Math.sqrt(dx * dx + dz * dz);
    if (dist > 0.1) {
        herobrine.position.x += dx * 0.02;
        herobrine.position.z += dz * 0.02;
    }

    // Столкновение
    if (dist < 0.5) {
        alert("⚠️ Херобрин нашёл тебя!");
        herobrine.position.set(Math.random() * 10, 1, Math.random() * 10);
    }
}

// === GAME LOOP ===
camera.position.set(0, 5, 10);
camera.lookAt(player.position);

function animate() {
    requestAnimationFrame(animate);
    updatePlayer();
    updateHerobrine();
    camera.position.set(player.position.x, 5, player.position.z + 5);
    camera.lookAt(player.position);
    renderer.render(scene, camera);
}

animate();
